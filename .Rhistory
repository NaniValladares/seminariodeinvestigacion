#install.packages("ggplot2")
rm(list=ls())
library(dplyr)
library(ggplot2)
setwd("/")
setwd("C:/Users/Ferna/Downloads/Seminario/Paper")
setwd("C:/Users/Ferna/Downloads/Seminario/Paper")
survey<-read.csv("encuesta_limpia.csv",sep=",", header=T)
```{r reading_dataset, echo=FALSE}
survey<-read.csv("encuesta_limpia.csv",sep=",", header=T)
Como se puede observar se capturaron `r nrow(survey)` observaciones y `r length(names(survey))` columnas, estas fueron diseñadas en funciones de las siguientes categorias:
1. Información demografica
2. Familiar
3. Orientación
4. Oferta académica
5. Registro
6. Matrícula
7. Hábitos del estudiante
8. Soft Skills
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
setwd("/")
setwd("C:/Users/Ferna/Downloads/Seminario/Paper")
survey<-read.csv("encuesta_limpia.csv",sep=",", header=T)
survey<-read.csv("encuesta_limpia.csv",sep=",", header=T)
## R Markdown
survey<-read.csv("encuesta_limpia.csv",sep=",", header=T)
str(survey)
summary(survey)
na.summay <- c()
for( myname in names(survey)){
s <- as.data.frame(prop.table(table(is.na(survey[,myname]))))
operacion <- s %>% filter(Var1 == TRUE) %>% select(Freq)
df_temp <- data.frame(
column.name=c(myname),
na.percentage = ifelse( length(operacion$Freq) == 0, 0, operacion$Freq[1] )
)
na.summay <- rbind(na.summay,df_temp)
}
na.summay %>% arrange(-na.percentage) %>% filter(na.percentage > 0)
summary(survey$veces._cambio_carrera)
survey[is.na(survey$veces._cambio_carrera),"veces_cambio_carrera"] <- 0
summary(survey$veces._cambio_carrera)
summary(survey$año_reprobacion)
survey[is.na(survey$veces._cambio_carrera),"veces_cambio_carrera"] <- 0
summary(survey$veces._cambio_carrera)
survey[is.na(survey$año_reprobacion),"año_reprobacion"] <- 0
summary(survey$año_reprobacion)
r nrow(survey)
df_perc6[df_perc6$Var1 %in% c("Cambio de intereses personales",
"Cambio de intereses personales;No era lo que esperaba"),
"razones_cambio"]<-"Cambio de intereses personales"
df_perc6<-as.data.frame(prop.table(table(survey$factores_cambio_carrera)))
df_perc6<-df_perc6 %>% arrange(-Freq)
boxplot(survey$factores_cambio_carrera)
hist(df_perc6$Freq)
qqnorm(df_perc6$Freq)
df_perc6[df_perc6$Var1 %in% c("Cambio de intereses personales",
"Cambio de intereses personales;No era lo que esperaba"),
"razones_cambio"]<-"Cambio de intereses personales"
df_perc6[df_perc6$Var1 %in% c("Factor económico",
"Factor económico;No era lo que esperaba",
"Cambio de intereses personales;Factor económico"),
"razones_cambio"]<-"Factor económico"
df_perc6[df_perc6$Var1 %in% c("Falta de puntos para la carrera a la cual aplico en la PAA",
"Cambio de intereses personales;Falta de puntos para la carrera a la cual aplico en la PAA",
"Cambio de intereses personales;No era lo que esperaba;Falta de puntos para la carrera a la cual aplico en la PAA",
"Factor económico;Falta de puntos para la carrera a la cual aplico en la PAA"),
"razones_cambio"]<-"Falta de puntos en la PAA"
df_perc6[df_perc6$Var1 %in% c("Influencia familiar",
"Influencia familiar;Cambio de intereses personales;Factor económico;No era lo que esperaba",
"Influencia familiar;Cambio de intereses personales;No era lo que esperaba",
"Influencia familiar;Falta de puntos para la carrera a la cual aplico en la PAA",
"Influencia familiar;No era lo que esperaba",
"Influencia familiar;No era lo que esperaba;Falta de puntos para la carrera a la cual aplico en la PAA"),
"razones_cambio"]<-"Influencia familiar"
df_perc6[df_perc6$Var1 %in% c("No era lo que esperaba",
"No era lo que esperaba;Falta de puntos para la carrera a la cual aplico en la PAA",
"No era lo que esperaba;Rendimiento académico",
"Rendimiento académico",
"Cambio de intereses personales;Factor económico;No era lo que esperaba;Rendimiento académico",
"Cambio de intereses personales;No era lo que esperaba;Rendimiento académico",
"Cambio de intereses personales;Factor económico;No era lo que esperaba"),
"razones_cambio"]<-"No era lo que esperaba"
df_perc6[df_perc6$Var1 %in% c("No aplica"),
"razones_cambio"]<-"No aplica"
df_perc6<-df_perc6 %>% select(Var1,razones_cambio)
survey<-left_join(survey,df_perc6,by=c("factores_cambio_carrera"="Var1"))
survey<-survey[,!(names(survey) %in% c("factores_cambio_carrera"))]
names(survey)[length(names(survey))]<-"factores_cambio_carrera"
prop.table(table(survey$factores_cambio_carrera))
survey$factores_cambio_carrera<-as.factor(survey$factores_cambio_carrera)
summary(survey$factores_cambio_carrera)
summary(survey$multiple_carrera)
df_perc6<-as.data.frame(prop.table(table(survey$factores_cambio_carrera)))
df_perc6<-df_perc6 %>% arrange(-Freq)
boxplot(survey$factores_cambio_carrera)
hist(df_perc6$Freq)
qqnorm(df_perc6$Freq)
library(ggplot2)
boxplot(survey$factores_cambio_carrera)
boxplot(df_perc6$factores_cambio_carrera)
df_perc6<-as.data.frame(prop.table(table(survey$factores_cambio_carrera)))
df_perc6<-df_perc6 %>% arrange(-Freq)
boxplot(df_perc6$factores_cambio_carrera)
hist(df_perc6$Freq)
boxplot(df_perc6$Freq)
hist(df_perc6$Freq)
qqnorm(df_perc6$Freq)
setwd("C:/Users/Ferna/Downloads/Seminario/Paper")
survey<-read.csv("encuesta_limpia.csv",sep=",", header=T,na.strings = c("","NA"))
names(survey)
summary(survey)
summary(survey$factores_cambio_carrera)
df_perc6<-as.data.frame(prop.table(table(survey$factores_cambio_carrera)))
df_perc6<-df_perc6 %>% arrange(-Freq)
boxplot(df_perc6$Freq)
hist(df_perc6$Freq)
qqnorm(df_perc6$Freq)
df_perc <- as.data.frame(prop.table(table(survey$pensado_cambio_carrera)))
df_perc <- df_perc %>% arrange(-Freq)
df_perc
boxplot(df_perc$Freq)
hist(df_perc$Freq)
qqnorm(df_perc$Freq)
qqnorm(df_perc$Freq)
df_perc6[df_perc6$Var1 %in% c("Tal vez",
"Sí"),
"pensado_cambio"]<-"Si"
df_perc6<-df_perc6 %>% select(Var1,pensado_cambio)
survey<-left_join(survey,df_perc6,by=c("pensado_cambio_carrera"="Var1"))
survey<-survey[,!(names(survey) %in% c("pensado_cambio_carrera"))]
names(survey)[length(names(survey))]<-"pensado_cambio_carrera"
prop.table(table(survey$pensado_cambio_carrera))
#cambiar factor no cambio por no aplica por que son personas que no han hecho un cambio pero que si han pesado cambiarse
survey %>% filter(is.na(survey$factores_no_cambio)  & (survey$pensado_cambio_carrera == 'No'))
#cambiar los NA de pensado en cambio de carrerra por no aplica por que son personas que si han hecho un cambio de Carrera
survey$pensado_cambio_carrera<- as.character(survey$pensado_cambio_carrera)
survey$pensado_cambio_carrera[is.na(survey$pensado_cambio_carrera)] <- "No aplica"
survey$pensado_cambio_carrera<-as.factor((survey$pensado_cambio_carrera))
summary(survey)
#cambiar los NA de pensado en cambio de carrerra por no aplica por que son personas que si han hecho un cambio de Carrera
survey$pensado_cambio_carrera<- as.character(survey$pensado_cambio_carrera)
survey$pensado_cambio_carrera[is.na(survey$pensado_cambio_carrera)] <- "No aplica"
survey$pensado_cambio_carrera<-as.factor((survey$pensado_cambio_carrera))
summary(survey)
boxplot(df_perc$Freq)
hist(df_perc$Freq)
qqnorm(df_perc$Freq)
df_perc6[df_perc6$Var1 %in% c("Tal vez",
"Sí"),
"pensado_cambio"]<-"Si"
df_perc9[df_perc9$Var1 %in% c("No aplica"
),"pensado_cambio"]<-"No aplica"
df_perc6<-df_perc6 %>% select(Var1,pensado_cambio)
survey<-left_join(survey,df_perc6,by=c("pensado_cambio_carrera"="Var1"))
survey<-survey[,!(names(survey) %in% c("pensado_cambio_carrera"))]
names(survey)[length(names(survey))]<-"pensado_cambio_carrera"
prop.table(table(survey$pensado_cambio_carrera))
prop.table(table(survey$previo_test_vocacional,survey$conocimiento_test_unah),2)
prop.table(table(survey$previo_test_vocacional,survey$conocimiento_test_unah),2)
ggplot(survey)+
aes(x=satisfaccion_carrera,fill=factor(conocimiento_test_vocacional))+
geom_bar(position = "fill")+
theme(axis.text = element_text(angle = 45))
ggplot(survey)+
aes(x=trabaja,fill=factor(cambio_carrera))+
geom_bar(position = "fill")+
theme(axis.text = element_text(angle = 45))
table(survey$conocimiento_test_unah)
summary(survey$conocimiento_test_unah)
str(survey$conocimiento_test_unah)
prop.table(table(survey$previo_test_vocacional,survey$conocimiento_test_unah),2)
ggplot(survey)+
aes(x=satisfaccion_carrera,fill=factor(conocimiento_test_vocacional))+
geom_bar(position = "fill")+
theme(axis.text = element_text(angle = 45))
ggplot(survey)+
aes(x=previo_test_vocacional,fill=factor(conocimiento_test_vocacional))+
geom_bar(position = "fill")+
theme(axis.text = element_text(angle = 45))
prop.table(table(survey$previo_test_vocacional,survey$conocimiento_test_unah),2)
ggplot(survey)+
aes(x=previo_test_vocacional,fill=factor(conocimiento_test_unah))+
geom_bar(position = "fill")+
theme(axis.text = element_text(angle = 45))
ggplot(survey)+
aes(x=factores_no_Cambio,fill=factor(procentaje_clases_cursadas))+
geom_bar(position = "fill")+
theme(axis.text = element_text(angle = 45))
setwd("/")
setwd("C:/Users/Ferna/Downloads/Seminario/Paper")
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
knitr::opts_knit$set(root.dir = 'C:/Users/Ferna/Downloads/Seminario/Paper')
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
knitr::opts_chunk$set(echo = TRUE)
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
knitr::opts_knit$set(root.dir = 'C:/Users/Ferna/Downloads/Seminario/Paper')
survey<-read.csv("encuesta_limpia.csv",sep=",", header=T)
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
library(knitr)
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
survey<-read.csv("encuesta_limpia.csv",sep=",", header=T)
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
survey<-read.csv("encuesta_transformada_regresion.csv",sep=",", header=T)
knitr::opts_knit$set(root.dir = 'C:/Users/Ferna/Downloads/Seminario/Paper')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(knitr)
ggplot(set) +
aes(x = horas_estudio_diario, fill = factor(cambio_carrera)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 0)) +
scale_fill_manual(values=c("#999999","#E69F00"))
Variables tomadas en cuenta para realizar la regresión
set <- survey[,(names(survey) %in% c(
'lugar_residencia',
'horas_estudio_diario',
'porcentaje_clases_matematica',
'satisfaccion_carrera',
'estudia_grupo',
'motivacion',
'trabaja',
'edad',
'asesoria_universitaria',
'pensado_cambio_carrera'
)
)]
Continuamos con la gráficas
```{r}
ggplot(set) +
aes(x = horas_estudio_diario, fill = factor(cambio_carrera)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 0)) +
scale_fill_manual(values=c("#999999","#E69F00"))
```
Variables tomadas en cuenta para realizar la regresión
set <- survey[,(names(survey) %in% c(
'lugar_residencia',
'horas_estudio_diario',
'porcentaje_clases_matematica',
'satisfaccion_carrera',
'estudia_grupo',
'motivacion',
'trabaja',
'edad',
'asesoria_universitaria',
'pensado_cambio_carrera'
)
)]
Variables tomadas en cuenta para realizar la regresión
```{r}
set <- survey[,(names(survey) %in% c(
'lugar_residencia',
'horas_estudio_diario',
'porcentaje_clases_matematica',
'satisfaccion_carrera',
'estudia_grupo',
'motivacion',
'trabaja',
'edad',
'asesoria_universitaria',
'pensado_cambio_carrera'
)
)]
```
```{r}
model <- glm(cambio_carrera ~ ., data = set, family = "binomial")
```
Variables tomadas en cuenta para realizar la regresión
```{r}
set <- survey[,(names(survey) %in% c(
'lugar_residencia',
'horas_estudio_diario',
'porcentaje_clases_matematica',
'satisfaccion_carrera',
'estudia_grupo',
'motivacion',
'trabaja',
'edad',
'asesoria_universitaria',
'pensado_cambio_carrera'
)
)]
```
```{r}
model <- glm(cambio_carrera ~ ., data = set, family = "binomial")
```
Continuamos con la gráficas
```{r}
ggplot(set) +
aes(x = horas_estudio_diario, fill = factor(cambio_carrera)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 0)) +
scale_fill_manual(values=c("#999999","#E69F00"))
```
Continuamos con la gráficas
```{r}
ggplot(set) +
aes(x = horas_estudio_diario, fill = factor(cambio_carrera)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 0)) +
scale_fill_manual(values=c("#999999","#E69F00"))
```
Variables tomadas en cuenta para realizar la regresión
```{r}
set <- survey[,(names(survey) %in% c(
'lugar_residencia',
'horas_estudio_diario',
'porcentaje_clases_matematica',
'satisfaccion_carrera',
'estudia_grupo',
'motivacion',
'trabaja',
'edad',
'asesoria_universitaria',
'pensado_cambio_carrera'
)
)]
```
Continuamos con la gráficas
```{r}
ggplot(set) +
aes(x = horas_estudio_diario, fill = factor(cambio_carrera)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 0)) +
scale_fill_manual(values=c("#999999","#E69F00"))
```
Continuamos con la gráficas
```{r}
ggplot(set) +
aes(x = horas_estudio_diario, fill = factor(cambio_carrera)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 0)) +
scale_fill_manual(values=c("#999999","#E69F00"))
```
Continuamos con la gráficas
```{r}
ggplot(set) +
aes(x = horas_estudio_diario, fill = factor(cambio_carrera)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 0)) +
scale_fill_manual(values=c("#999999","#E69F00"))
```
Continuamos con la gráficas
```{r}
ggplot(set) +
aes(x = horas_estudio_diario, fill = factor(cambio_carrera)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 0)) +
scale_fill_manual(values=c("#999999","#E69F00"))
```
Continuamos con la gráficas
```{r}
ggplot(set) +
aes(x = horas_estudio_diario, fill = factor(cambio_carrera)) +
geom_bar(position = "stack") +
theme(axis.text.x = element_text(angle = 0)) +
scale_fill_manual(values=c("#999999","#E69F00"))
```
knitr::opts_knit$set(root.dir = 'C:/Users/Ferna/Downloads/Seminario/Paper')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(knitr)
library(caret)
library(caret)
library(caret)
install.packages("caret")
install.packages("knitr")
knitr::opts_knit$set(root.dir = 'C:/Users/Ferna/Downloads/Seminario/Paper')
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(knitr)
library(caret)
library(imager)
install.packages("lattice")
